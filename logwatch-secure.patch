Index: scripts/services/secure
===================================================================
RCS file: /var/cvs/logwatch/scripts/services/secure,v
retrieving revision 1.49
diff -u -r1.49 secure
--- scripts/services/secure	24 Feb 2005 17:08:05 -0000	1.49
+++ scripts/services/secure	24 Feb 2005 22:42:29 -0000
@@ -49,6 +49,7 @@
 $ConsoleLock = 0;
 $spop3d_opened=0;
 $spop3d_errors=0;
+$pwd_file_unknown = 0;
 use Logwatch ':ip';
 
 while (defined($ThisLine = <STDIN>)) {
@@ -60,16 +61,18 @@
    $temp =~ s/^([^[]+).*/$1/;
    if ($Ignore =~ /\b\Q$temp\E\b/i) { next; }
    if (
-      ( $ThisLine =~ /pam_succeed_if: requirement "uid < 100" not met by user /) or
+      ( $ThisLine =~ /^(.*)\(pam_unix\)/) or
       ( $ThisLine =~ m/^[^ ]+\[\d+\]: connect from localhost$/ ) or
       ( $ThisLine =~ /^\/usr\/bin\/sudo:/) or
-      ( $ThisLine =~ /^sudo:/) or
       ( $ThisLine =~ /^halt:/) or
-      ( $ThisLine =~ /^reboot:/) or
+      ( $ThisLine =~ /^last message repeated \d times/) or
       ( $ThisLine =~ /^pam_xauth\[\d+\]: call_xauth: child returned \d/) or
       ( $ThisLine =~ /^passwd\[\d+\]:/) or
-      ( $ThisLine =~ /warning: can.t get client address: Connection refused/) or
+      ( $ThisLine =~ /^reboot:/) or
+      ( $ThisLine =~ /^sudo:/) or
       ( $ThisLine =~ /^xinetd\[\d+\]: USERID: ([^ ]+) (.+)$/ ) or
+      ( $ThisLine =~ /pam_succeed_if: requirement "uid < 100" not met by user /) or
+      ( $ThisLine =~ /warning: can.t get client address: Connection refused/)
       ( $ThisLine =~ /^(xinetd|xinetd-ipv6)\[\d+\]: EXIT: /) or
       ( $ThisLine =~ /^crond\(\w+\)\[\d+\]: session /) or
       ( $ThisLine =~ /^sshd\(\w+\)\[\d+\]: authentication failure/) or
@@ -212,6 +215,12 @@
    } elsif ( ($PID) = ($ThisLine =~ /^checkpassword-pam\[(\d+)\]: Setting PAM credentials succeeded/)) {
    } elsif ( ($PID) = ($ThisLine =~ /^checkpassword-pam\[(\d+)\]: Terminating PAM library/)) {
    } elsif ( ($PID) = ($ThisLine =~ /^checkpassword-pam\[(\d+)\]: Exiting with status 0/)) {
+   } elsif ( ($User) = ($ThisLine =~ /^pam_tally\[\d+\]: pam_tally: pam_get_uid; no such user ([^ ]+)/)) {
+      $UnknownUser{$User}++;
+   } elsif ( ($User) = ($ThisLine =~ /^pam_pwdfile\[\d+\]: user not found in password database/) {
+      $pwd_file_unknown++;
+   } elsif ( ($User) = ($ThisLine =~ /^pam_pwdfile\[\d+\]: wrong password for user ([^ ]+)/)) {
+      $UnknownUser{$User}++;
    } else {
       # Unmatched entries...
       push @OtherList, "$ThisLine\n";
@@ -282,6 +291,17 @@
    }
 }
 
+if (keys %UnknownUser) {
+   print "\nUnknown users:\n";
+   foreach $User (sort {$a cmp $b} keys %UnknownUser) {
+      print "   $User : $UnknownUser{$User} Time(s)\n";
+   }
+}
+
+if ($pwd_file_unknown > 0) {
+   print "\nUsers unknown in password database (pwd_file): $pwd_file_unknown\n";
+}
+
 if (keys %{$Connections}) {
    print "\nConnections:\n";
    foreach $ThisOne (keys %{$Connections}) {
@@ -349,7 +369,7 @@
    foreach $Service (sort {$a cmp $b} keys %NameVerifyFail) {
       print "   Service $Service:\n";
       foreach $Name (sort {$a cmp $b} keys %{$NameVerifyFail{$Service}}) {
-         print "      $Name$NameVerifyFail{$Service}{$Name} Time(s)\n";
+         print "      $Name$NameVerifyFail{$Service}{$Name} Time(s)\n";
       }
    }
 }
@@ -445,4 +465,3 @@
 exit(0);
 
 # vi: shiftwidth=3 tabstop=3 syntax=perl et
-
