Index: scripts/services/secure
===================================================================
RCS file: /var/cvs/logwatch/scripts/services/secure,v
retrieving revision 1.40
diff -u -r1.40 secure
--- scripts/services/secure	15 Dec 2003 21:49:19 -0000	1.40
+++ scripts/services/secure	26 Dec 2003 00:00:36 -0000
@@ -2,6 +2,8 @@
 ##########################################################################
 # $Id$
 ##########################################################################
+# $Log$
+##########################################################################
 
 ########################################################
 # This was written and is maintained by:
@@ -15,7 +17,7 @@
 $DoLookup = $ENV{'secure_ip_lookup'};
 $Ignore = $ENV{'ignore_services'};
 $Summarize = $ENV{'summarize_connections'};
-
+$ConsoleLock = 0;
 use Logwatch ':ip';
 
 while (defined($ThisLine = <STDIN>)) {
@@ -80,7 +82,7 @@
       $Error{$Service}{$Err}++;
    } elsif ( $ThisLine =~ /^login: ROOT LOGIN ON tty[0-9]+/) {
       $RootLoginTTY++
-   } elsif ( ($User) = ($ThisLine =~ /^login: LOGIN ON tty[0-9]+ BY ([^ ]+)$/ )) {
+   } elsif ( (undef,$User) = ($ThisLine =~ /^login: LOGIN ON (tty|pts\/)[0-9]+ BY ([^ ]+)/ )) {
       $UserLogin{$User}++;
    } elsif ( $ThisLine =~ s/^userdel\[\d+\]: delete user `(.+)'/$1/ ) {
       push @DeletedUsers, "   $ThisLine\n";
@@ -109,6 +111,10 @@
    } elsif ( ($service, $from) = ($ThisLine =~ /^xinetd\[\d+\]: FAIL: (.+) (?:address|libwrap) from=([\d.]+)/)) {
       if ($Ignore =~ /\b\Q$service\E\b/i) { next; }    
       $Refused->{$service}->{$from}++;
+   } elsif ( ($User) = ($ThisLine =~ /^chage\[\d+\]: changed password expiry for ([^ ]+)/)) {
+      $PasswordExpiry{$User}++;
+   } elsif ( (undef) = ($ThisLine =~ /^pam_console\[\d+\]: console file lock already in place ([^ ]+)/)) {
+      $ConsoleLock++;
    } else {
       # Unmatched entries...
       push @OtherList, "$ThisLine\n";
@@ -200,9 +206,9 @@
 if (keys %Error) {
 	print "\nErrors:\n";
 	foreach $Service (sort {$a cmp $b} keys %Error) {
-		print "   Service " . $Service . ":\n";
+		print "   Service $Service:\n";
 		foreach $Err (sort {$a cmp $b} keys %{$Error{$Service}}) {
-			print "      " . $Err . ": " . $Error{$Service}{$Err} . " Time(s)\n";
+			print "      $Err: $Error{$Service}{$Err} Time(s)\n";
 		}
 	}
 }
@@ -212,10 +218,21 @@
 }
 
 if (keys %UserLogin) {
-	print "\nUser Login's on tty\'s:\n";
+	print "\nUser Login's:\n";
 	foreach $User (sort {$a cmp $b} keys %UserLogin) {
 		print "   $User : $UserLogin{$User} Time(s)\n";
 	}
+}
+
+if ($ConsoleLock > 0) {
+   print "\nConsole file lock already in place: $ConsoleLock Time(s).\n";
+}
+
+if (keys %PasswordExpiry) {
+   print "\nChanged password expiry for users:\n";
+   foreach $User (sort {$a cmp $b} keys %PasswordExpiry) {
+      print "   $User : $PasswordExpiry{$User} Time(s)\n";
+   }
 }
 
 if ($#SudoList >= 0) {
