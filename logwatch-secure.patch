Index: scripts/services/secure
===================================================================
RCS file: /var/cvs/logwatch/scripts/services/secure,v
retrieving revision 1.47
diff -u -r1.47 secure
--- scripts/services/secure	29 Oct 2004 21:19:01 -0000	1.47
+++ scripts/services/secure	14 Dec 2004 21:16:41 -0000
@@ -53,9 +53,11 @@
 $DoLookup = $ENV{'secure_ip_lookup'};
 $Ignore = $ENV{'ignore_services'};
 $Summarize = $ENV{'summarize_connections'};
-$ConsoleLock = 0;
-$spop3d_opened=0;
-$spop3d_errors=0;
+$ConsoleLock   = 0;
+$spop3d_opened = 0;
+$spop3d_errors = 0;
+$pwd_file_unknown = 0;
+
 use Logwatch ':ip';
 
 while (defined($ThisLine = <STDIN>)) {
@@ -67,17 +69,19 @@
    $temp =~ s/^([^[]+).*/$1/;
    if ($Ignore =~ /\b\Q$temp\E\b/i) { next; }
    if (
-      ( $ThisLine =~ /pam_succeed_if: requirement "uid < 100" not met by user /) or
+      ( $ThisLine =~ /^(.*)\(pam_unix\)/) or
       ( $ThisLine =~ m/^[^ ]+\[\d+\]: connect from localhost$/ ) or
       ( $ThisLine =~ /^\/usr\/bin\/sudo:/) or
-      ( $ThisLine =~ /^sudo:/) or
       ( $ThisLine =~ /^halt:/) or
-      ( $ThisLine =~ /^reboot:/) or
+      ( $ThisLine =~ /^last message repeated \d times/) or
       ( $ThisLine =~ /^pam_xauth\[\d+\]: call_xauth: child returned \d/) or
       ( $ThisLine =~ /^passwd\[\d+\]:/) or
-      ( $ThisLine =~ /warning: can.t get client address: Connection refused/) or
+      ( $ThisLine =~ /^reboot:/) or
+      ( $ThisLine =~ /^sudo:/) or
       ( $ThisLine =~ /^xinetd\[\d+\]: USERID: ([^ ]+) (.+)$/ ) or
-      ( $ThisLine =~ /^(xinetd|xinetd-ipv6)\[\d+\]: EXIT: /)
+      ( $ThisLine =~ /^(xinetd|xinetd-ipv6)\[\d+\]: EXIT: /) or
+      ( $ThisLine =~ /pam_succeed_if: requirement "uid < 100" not met by user /) or
+      ( $ThisLine =~ /warning: can.t get client address: Connection refused/)
    ) {
       # Ignore these entries
    } elsif ($ThisLine =~ /^spop3d/) {
@@ -214,6 +218,12 @@
    } elsif ( ($PID) = ($ThisLine =~ /^checkpassword-pam\[(\d+)\]: Setting PAM credentials succeeded/)) {
    } elsif ( ($PID) = ($ThisLine =~ /^checkpassword-pam\[(\d+)\]: Terminating PAM library/)) {
    } elsif ( ($PID) = ($ThisLine =~ /^checkpassword-pam\[(\d+)\]: Exiting with status 0/)) {
+   } elsif ( ($User) = ($ThisLine =~ /^pam_tally\[\d+\]: pam_tally: pam_get_uid; no such user ([^ ]+)/)) {
+      $UnknownUser{$User}++;
+   } elsif ( ($User) = ($ThisLine =~ /^pam_pwdfile\[\d+\]: user not found in password database/) {
+      $pwd_file_unknown++;
+   } elsif ( ($User) = ($ThisLine =~ /^pam_pwdfile\[\d+\]: wrong password for user ([^ ]+)/)) {
+      $UnknownUser{$User}++;
    } else {
       # Unmatched entries...
       push @OtherList, "$ThisLine\n";
@@ -284,6 +294,17 @@
    }
 }
 
+if (keys %UnknownUser) {
+   print "\nUnknown users:\n";
+   foreach $User (sort {$a cmp $b} keys %UnknownUser) {
+      print "   $User : $UnknownUser{$User} Time(s)\n";
+   }
+}
+
+if ($pwd_file_unknown > 0) {
+   print "\nUsers unknown in password database (pwd_file): $pwd_file_unknown\n";
+}
+
 if (keys %{$Connections}) {
    print "\nConnections:\n";
    foreach $ThisOne (keys %{$Connections}) {
@@ -446,5 +467,4 @@
 
 exit(0);
 
-# vi: shiftwidth=3 tabstop=3 et
-
+# vi: shiftwidth=3 tabstop=3 syntax=perl et
