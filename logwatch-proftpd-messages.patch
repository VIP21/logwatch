Index: scripts/services/proftpd-messages
===================================================================
RCS file: /var/cvs/logwatch/scripts/services/proftpd-messages,v
retrieving revision 1.13
diff -u -r1.13 proftpd-messages
--- scripts/services/proftpd-messages	26 Nov 2003 14:36:30 -0000	1.13
+++ scripts/services/proftpd-messages	7 Dec 2003 23:33:29 -0000
@@ -35,7 +35,7 @@
 		$Temp = "   " . $Host . " (" . $IP . ")";
 		$AnonLogins{$Temp}++;
 	} elsif ( ($User,$Host,$IP) = ( $ThisLine =~ /^FTP session opened: (.*\/.*) (.*)\[(.*)\] (.*)$/ ) ) {
-		$Temp = "   " . $Host .  ": " . $User . " - ";
+		$Temp = "   $Host : $User - ";
 		$UserLogins{$Temp}++;
 	} elsif ( ($Host,$IP,$User) = ( $ThisLine =~ /\((.*)\[(.*)\]\) - USER (.+): Login successful/ ) ) {
 		$Temp = "   " . $Host . ": " . $User . " - ";
@@ -44,19 +44,21 @@
 	   $Temp = "   " . "Unknown" . " (" . "Unknown.IP" . "): " . $User . " - ";
 	   $BadUsers{$Temp}++;
    } elsif ( ($User,$Host,$IP) = ( $ThisLine =~ /USER (.*): no such user found from (.*) \[(.*)\] to/ ) ) {
-	   $Temp = "   " . $Host . ": " . $User . " - ";
+	   $Temp = "   $Host : $User - ";
 	   $BadUsers{$Temp}++;
    } elsif ( ($Host,$Ip,$User) = ( $ThisLine =~ /\((.*)\[(.*)\]\) - no such user '(.*)'.$/ ) ) {
 	   #$Temp = "$Host($Ip)";
 	   $BadUsers{$User}{$Host}++;
    } elsif ( ($Host,$User) = ( $ThisLine =~ /\[(.*)\]\) - USER (.*) \(Login failed\): Incorrect password/ ) ) {
-	   $Temp = "   " . $Host . ": " . $User . " - ";
+	   $Temp = "   $Host : $User - ";
 	   $BadPasswds{$Temp}++;
    } elsif ( ($Host,$User) = ( $ThisLine =~ /\[(.*)\]\) - USER (.*) \(Login failed\): Invalid shell/ ) ) {
-	   $Temp = "   " . $Host . ": " . $User . " - ";
+	   $Temp = "   $Host : $User - ";
 	   $BadShell{$Temp}++;
    } elsif ( ($Host,$Ip) = ( $ThisLine =~ /\((.*)\[(.*)\]\) - SECURITY VIOLATION: root login attempted./ ) ) {
 	   $RootLoginAttempt{$Host}++;
+   } elsif ( ($Host) = ( $ThisLine =~ /\(((.*)\[(.*)\])\) - Maximum login attempts exceeded./ ) ) {
+	   $MaxLoginAttempts{$Host}++;
    }elsif ( ($Host,$Reason) = ( $ThisLine =~ /\[(.*)\]\) - Refused PORT [\d,]+ \((.*)\)/ ) ) {
 	   $Temp = "   " . $Host . ": " . $Reason . " - ";
 	   $RefusedPorts{$Temp}++;
@@ -98,6 +100,13 @@
 	}
 }
 
+if (keys %MaxLoginAttempts) {
+	print "\nMaximum login attempts exceeded from hosts:\n";
+	foreach $Host (sort {$a cmp $b} keys %MaxLoginAttempts) {
+		print "  $Host : $MaxLoginAttempts{$Host} Time(s)\n";
+	}
+}
+
 if ( ( (keys %BadUsers) or (keys %BadPasswds) ) and ($Detail >= 5) ) {
 	print "\nFailed FTP Logins:\n";
 	
@@ -127,15 +136,15 @@
 }
 
 if ( (keys %RefusedPorts) and ($Detail >= 5) ) {
-   print "\nRefused PORTs:\n";
-   foreach $ThisOne (sort {$a cmp $b} keys %RefusedPorts) {
-      print $ThisOne . $RefusedPorts{$ThisOne} . " Time(s)\n";
-   }
+	print "\nRefused PORTs:\n";
+	foreach $ThisOne (sort {$a cmp $b} keys %RefusedPorts) {
+		print $ThisOne . $RefusedPorts{$ThisOne} . " Time(s)\n";
+	}
 }
 
-if (($#OtherList >= 0) and (not $IngoreUnmatched)){
-   print "\n**Unmatched Entries**\n";
-   print @OtherList;
+if (($#OtherList >= 0) and (not $IngoreUnmatched)) {
+	print "\n**Unmatched Entries**\n";
+	print @OtherList;
 }
 
 exit(0);
