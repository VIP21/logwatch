Index: scripts/services/postfix
===================================================================
RCS file: /var/cvs/logwatch/scripts/services/postfix,v
retrieving revision 1.18
diff -u -r1.18 postfix
--- scripts/services/postfix	17 Apr 2005 23:12:28 -0000	1.18
+++ scripts/services/postfix	22 Apr 2005 10:19:02 -0000
@@ -114,20 +114,22 @@
 my $Detail = $ENV{'LOGWATCH_DETAIL_LEVEL'} || 0;
 my $Debug = $ENV{'LOGWATCH_DEBUG'} || 0;
 
-$MsgsSent = 0;
-$BytesTransferred = 0;
-$FourHourReturns = 0;
-$ReturnedToSender = 0;
-$ResentMessages = 0;
-$RemovedFromQueue = 0;
-$UnsupportedFamily = 0;
-$TableChanged = 0;
-$QueueSizeExceeded = 0;
-$RejectedRBL = 0;
-$ErrorRBL = 0;
-$NoFreeSpace = 0;
-$RejectClients = 0;
-$RejectUnknownClients = 0;
+$MsgsSent               = 0;
+$BytesTransferred       = 0;
+$FourHourReturns        = 0;
+$ReturnedToSender       = 0;
+$ResentMessages         = 0;
+$RemovedFromQueue       = 0;
+$UnsupportedFamily      = 0;
+$TableChanged           = 0;
+$QueueSizeExceeded      = 0;
+$RejectedRBL            = 0;
+$ErrorRBL               = 0;
+$NoFreeSpace            = 0;
+$RejectClients          = 0;
+$RejectUnknownClients   = 0;
+$Undeliverable          = 0;
+$Deliverable            = 0;
 
 while (defined($ThisLine = <STDIN>)) {
    if ( 
@@ -219,16 +221,29 @@
       $ReturnedToSender++;
    } elsif ( (undef) = ($ThisLine =~ /^[a-zA-Z0-9]+: resent-message-id=<([^ ]*)>$/)) {
       $ResentMessages++;
-   } elsif ( ($Command,$Host) = ($ThisLine =~ /lost connection after ([^ ]*) from ([^ ]*)$/)) {
+   } elsif (
+         ($Command,$Host) = ($ThisLine =~ /lost connection after ([^ ]*) from ([^ ]*)$/) or
+         ($Host,$Command) = ($ThisLine =~ /^[a-zA-Z0-9]+: lost connection with ([^ ]*) while (.*)$/)
+      ) {
       # Make some better summary with hosts
       $ConnectionLost{$Command}++;
-   } elsif ( ($Command,$Host) = ($ThisLine =~ /timeout after ([^ ]*) from ([^ ]*)$/)) {
+   } elsif (
+         ($Command,$Host) = ($ThisLine =~ /timeout after ([^ ]*) from ([^ ]*)$/) or
+         ($Host,$Command) = ($ThisLine =~ /^[a-zA-Z0-9]+: conversation with ([^ ]*) timed out while (.*)$/)
+      ) {
       # Make some better summary with hosts
       $ConnectionLost{$Command}++;
-   } elsif ( ($Rejected,undef,undef,$Reason) = ($ThisLine =~ /^[a-zA-Z0-9]+: reject: header (.*); from=<([^ ]*)> to=<([^ ]*)>: (.*)$/)) {
+   } elsif ( ($Rejected,undef,undef,undef,$Reason) = ($ThisLine =~ /^[a-zA-Z0-9]+: reject: header (.*); from=<([^ ]*)> to=<([^ ]*)>( proto=[^ ]* helo=<[^ ]*>)?: (.*)$/)) {
       $HeaderReject{$Reason}{$Rejected}++;
-   } elsif ( ($Warning,undef,undef,$Reason) = ($ThisLine =~ /^[a-zA-Z0-9]+: warning: header (.*); from=<([^ ]*)> to=<([^ ]*)>: (.*)$/)) {
+   } elsif ( ($Warning,undef,undef,undef,$Reason) = ($ThisLine =~ /^[a-zA-Z0-9]+: warning: header (.*); from=<([^ ]*)> to=<([^ ]*)>( proto=[^ ]* helo=<[^ ]*>)?: (.*)$/)) {
       $HeaderWarning{$Reason}{$Warning}++;
+   } elsif ( ($Warning,undef,undef,undef) = ($ThisLine =~ /^[a-zA-Z0-9]+: warning: header (.*); from=<([^ ]*)> to=<([^ ]*)>( proto=[^ ]* helo=<[^ ]*>)?$/)) {
+      $HeaderWarning{"Unknown Reason"}{$Warning}++;
+   } elsif ( (undef,undef,undef,$Reason) = ($ThisLine =~ /^[a-zA-Z0-9]+: to=<([^ ]*)>,( orig_to=<[^ ]*>,)? relay=([^ ]*), delay=\d+, status=undeliverable \((.*)\)$/)) {
+      $Undeliverable++;
+      $UndeliverableMsg{$Reason}++;
+   } elsif ( (undef,undef,undef,undef) = ($ThisLine =~ /^[a-zA-Z0-9]+: to=<([^ ]*)>,( orig_to=<[^ ]*>,)? relay=([^ ]*), delay=\d+, status=deliverable \((.*)\)$/)) {
+      $Deliverable++;
    #} elsif ( ($Host,undef) = ($ThisLine =~ /reject: RCPT from ([^ ]*\[[^ ]*\]): [0-9]+ <([^ ]*)>: Sender address rejected: Domain not found;/)) {
    #   $RejectDomain{$Host}++;
    # above two lines included in generic reject sender on next condition
@@ -283,7 +298,10 @@
       $MailerLoop{$Error}++;
    } elsif ( ($Host) = ($ThisLine =~ /warning: ([^ ]*\[[^ ]*\]): SASL .* authentication failed/)) {
       $SaslAuthenticationFail{$Host}++;
-   } elsif ( ($Host,$User) = ($ThisLine =~ /^[a-zA-Z0-9]+: client=([^ ]*\[[^ ]*\]), .* sasl_username=([^ ]*)$/)) {
+   } elsif (
+         ($Host,$User) = ($ThisLine =~ /^[a-zA-Z0-9]+: client=([^ ]*\[[^ ]*\]), .* sasl_username=([^ ]*)$/) or
+         ($Host,$User) = ($ThisLine =~ /^[a-zA-Z0-9]+: client=([^ ]*\[[^ ]*\]), sasl_sender=([^ ]*)$/)
+      ) {
       chomp($User);
       $SaslAuth{$Host}{$User}++;
    } elsif ( ($Host) = ($ThisLine =~ /TLS connection established from ([^ ]*\[[^ ]*\]):/)) {
@@ -302,7 +320,10 @@
          ($ThisLine =~ m/warning: smtp_addr_one: unknown address family \d for [^ ]*/)
       ) {
       $UnsupportedFamily++;
-   } elsif ($ThisLine =~ m/(lookup |)table has changed -- exiting$/) {
+   } elsif (
+         ($ThisLine =~ m/(lookup |)table has changed -- exiting$/) or
+         ($ThisLine =~ m/table ([^ ]*) has changed -- restarting$/)
+      ) {
       $TableChanged++;
    } elsif (
          ($ThisLine =~ m/^fatal: [^ ]*\(\d+\): Message file too big$/) or
@@ -314,6 +335,8 @@
       $TooManyErrors{$Command}{$Host}++;
    } elsif ( (undef,undef,$To) = ($ThisLine =~ /^reject: RCPT from ([^ ]*\[[^ ]*\]): 552 Message size exceeds fixed limit; from=<([^ ]*)> to=<([^ ]*)>$/)) {
       $SizeLimit{"$From -> $To"}++;
+   } elsif ( ($Server) = ($ThisLine =~ /^NOQUEUE: reject: MAIL from ([^ ]*\[[^ ]*\]): 552 Message size exceeds fixed limit; proto=[^ ]* helo=<[^ ]*>$/)) {
+      $SizeLimit{"MAIL from $Server"}++;
    } elsif ( (undef,$Source) = ($ThisLine =~ /^warning: database ([^ ]*) is older than source file ([a-zA-Z0-9\/]+)$/)) {
       $DatabaseGeneration{$Source}++;
    } elsif ( ($Reason) = ($ThisLine =~ /^warning: [a-zA-Z0-9]+: write queue file: (.*)$/)) {
@@ -356,6 +379,14 @@
    print "\n$FourHourReturns messages returned after 4 hours";
 }
 
+if ($Deliverable > 0) {
+   print "\n$Deliverable messages accepted as deliverable";
+}
+
+if ($Undeliverable > 0) {
+   print "\n$Undeliverable messages rejected as undeliverable";
+}
+
 if ($ReturnedToSender >0) {
    print "\n$ReturnedToSender messages expired and returned to sender";
 }
@@ -748,6 +779,13 @@
    }
 }
 
+if (($Detail >= 10) and (keys %UndeliverableMsg)) {
+   print "\n\nUndeliverable messages rejected:\n";
+   foreach $Reason (sort {$a cmp $b} keys %UndeliverableMsg) {
+      print "   $Reason: $UndeliverableMsg{$Reason} Time(s)\n";
+   }
+}
+
 if (keys %RejectSender) {
    print "\n\nMessages rejected:\n";
    foreach $Reason (sort {$a cmp $b} keys %RejectSender) {
@@ -922,7 +960,7 @@
 if (keys %ConnectionLost) {
    print "\n\nConnections lost:\n";
    foreach $ThisOne (sort {$a cmp $b} keys %ConnectionLost) {
-      print "   Connection lost after command $ThisOne : $ConnectionLost{$ThisOne} Time(s)\n";
+      print "   Connection lost while $ThisOne : $ConnectionLost{$ThisOne} Time(s)\n";
    }
 }
 
